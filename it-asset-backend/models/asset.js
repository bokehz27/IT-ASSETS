// it-asset-backend/models/asset.js
const { DataTypes } = require("sequelize");
const sequelize = require("../config/database");
const BitlockerKey = require("./bitlockerKey");
const AssetSpecialProgram = require("./assetSpecialProgram");

// ‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏´‡∏ï‡∏∏:
// - ‡πÄ‡∏Å‡πá‡∏ö‡∏ä‡∏ô‡∏¥‡∏î‡πÄ‡∏î‡∏¥‡∏°‡∏Ç‡∏≠‡∏á‡∏ö‡∏≤‡∏á‡∏ü‡∏¥‡∏•‡∏î‡πå‡∏ï‡∏≤‡∏°‡∏™‡∏Ñ‡∏µ‡∏°‡∏≤‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô (‡πÄ‡∏ä‡πà‡∏ô wifi_registered = STRING)
// - ‡πÄ‡∏û‡∏¥‡πà‡∏° unique + hook normalize ‡πÉ‡∏´‡πâ asset_code
// - ‡∏£‡∏∞‡∏ö‡∏∏ allowNull ‡πÉ‡∏´‡πâ‡∏ä‡∏±‡∏î‡πÄ‡∏à‡∏ô

const Asset = sequelize.define(
  "Asset",
  {
    asset_code: { type: DataTypes.STRING, allowNull: false, unique: true },
    serial_number: { type: DataTypes.STRING, allowNull: true },
    brand: { type: DataTypes.STRING, allowNull: true },
    model: { type: DataTypes.STRING, allowNull: true },

    // ‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà (‡πÉ‡∏ä‡πâ‡πÉ‡∏ô Replace)
    category: { type: DataTypes.STRING, allowNull: true },
    subcategory: { type: DataTypes.STRING, allowNull: true },

    // ‡∏™‡πÄ‡∏õ‡∏Å‡∏Æ‡∏≤‡∏£‡πå‡∏î‡πÅ‡∏ß‡∏£‡πå
    ram: { type: DataTypes.STRING, allowNull: true },
    cpu: { type: DataTypes.STRING, allowNull: true },
    storage: { type: DataTypes.STRING, allowNull: true },
    device_id: { type: DataTypes.STRING, allowNull: true },

    // ‡πÄ‡∏Ñ‡∏£‡∏∑‡∏≠‡∏Ç‡πà‡∏≤‡∏¢ (‡πÉ‡∏ä‡πâ‡πÉ‡∏ô Replace)
    ip_address: { type: DataTypes.STRING, allowNull: true },
    wifi_registered: { type: DataTypes.STRING, allowNull: true }, // ‡∏Ñ‡∏á‡∏ä‡∏ô‡∏¥‡∏î‡πÄ‡∏î‡∏¥‡∏°‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏´‡∏•‡∏µ‡∏Å‡πÄ‡∏•‡∏µ‡πà‡∏¢‡∏á migration

    mac_address_lan: { type: DataTypes.STRING, allowNull: true },
    mac_address_wifi: { type: DataTypes.STRING, allowNull: true },

    // ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô (‡πÉ‡∏ä‡πâ‡πÉ‡∏ô Replace)
    start_date: { type: DataTypes.DATEONLY, allowNull: true },
    location: { type: DataTypes.STRING, allowNull: true },
    fin_asset_ref: { type: DataTypes.STRING, allowNull: true },
    user_id: { type: DataTypes.STRING, allowNull: true },
    user_name: { type: DataTypes.STRING, allowNull: true },
    department: { type: DataTypes.STRING, allowNull: true },

    // ‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞
    status: { type: DataTypes.STRING, allowNull: true, defaultValue: "Enable" },

    // License/Software (‡πÉ‡∏ä‡πâ‡πÉ‡∏ô Replace)
    windows_version: { type: DataTypes.STRING, allowNull: true },
    windows_key: { type: DataTypes.STRING, allowNull: true },
    office_version: { type: DataTypes.STRING, allowNull: true }, // Microsoft Office
    office_key: { type: DataTypes.STRING, allowNull: true },     // Office Product Key
    antivirus: { type: DataTypes.STRING, allowNull: true },

    // üÜï ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ü‡∏¥‡∏•‡∏î‡πå‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÄ‡∏Å‡πá‡∏ö‡πÑ‡∏ü‡∏•‡πå CSV ‡∏Ç‡∏≠‡∏á BitLocker
    bitlocker_file_url: { type: DataTypes.STRING, allowNull: true },
  },
  {
    tableName: "assets",
    hooks: {
      beforeValidate(instance) {
        if (instance.asset_code) {
          instance.asset_code = String(instance.asset_code)
            .trim()
            .toUpperCase()
            .replace(/[\s-]+/g, "");
        }
      },
    },
    indexes: [
      // ‡πÄ‡∏£‡πà‡∏á‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏£‡πá‡∏ß‡∏Å‡∏≤‡∏£‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏ï‡∏≤‡∏° code ‡πÅ‡∏•‡∏∞‡∏Å‡∏±‡∏ô‡∏ã‡πâ‡∏≥‡∏£‡∏∞‡∏î‡∏±‡∏ö DB
      { unique: true, fields: ["asset_code"] },
    ],
  }
);

// ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏±‡∏°‡∏û‡∏±‡∏ô‡∏ò‡πå BitLocker
Asset.hasMany(BitlockerKey, {
  foreignKey: "assetId",
  as: "bitlockerKeys",
  onDelete: "CASCADE",
});
BitlockerKey.belongsTo(Asset, {
  foreignKey: "assetId",
  as: "asset",
});

// ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏±‡∏°‡∏û‡∏±‡∏ô‡∏ò‡πå Special Programs
Asset.hasMany(AssetSpecialProgram, {
  foreignKey: "assetId",
  as: "specialPrograms",
  onDelete: "CASCADE",
});
AssetSpecialProgram.belongsTo(Asset, {
  foreignKey: "assetId",
  as: "asset",
});

module.exports = Asset;
